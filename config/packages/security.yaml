security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Utilisateurs:
            algorithm: bcrypt
        App\Entity\Parents:
            algorithm: bcrypt
        App\Entity\Repetiteur:
            algorithm: bcrypt

    providers:
        users_in_memory: { memory: null }
        chain_provider:
            chain:
                providers: [users_db, parents_db, apprenants_db]

        users_db:
            entity:
                class: App\Entity\Repetiteur
                property: email

        parents_db:
            entity:
                class: App\Entity\Parents
                property: email

        apprenants_db:
            entity:
                class: App\Entity\Apprenants
                property: pseudo

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLE_ADMIN for /admin*
         - { path: ^/admin, roles: ROLE_REPETITEUR }

        # - { path: ^/profile, roles: ROLE_USER }
